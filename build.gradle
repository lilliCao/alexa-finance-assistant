buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'ca.cutterslade.gradle:gradle-dependency-analyze:1.3.1'
    }
}

plugins {
    id 'java'
    id "com.github.ben-manes.versions" version "0.21.0"
}



group = "amosalexa"
version = '1.0'

compileJava {
    targetCompatibility = JavaVersion.VERSION_1_8
    sourceCompatibility = JavaVersion.VERSION_1_8
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
    }
    
    test {
        java {
            srcDirs = ["src/test/java"]
        }
    }
}

// no test yet
test {
    exclude '**/*'
}

allprojects {
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Test) {
        systemProperty "file.encoding", "UTF-8"
    }

    //apply plugin for unused dep: 'ca.cutterslade.analyze'
}

repositories {
    jcenter()
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

dependencies {
    compile group: 'com.amazon.alexa', name: 'ask-sdk', version: '2.17.2'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: '1.11.554'

    compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.554'

    compile 'log4j:log4j:1.2.17'
    compile 'org.slf4j:slf4j-api:1.8.0-beta4'
    compile 'org.apache.commons:commons-lang3:3.9'

    compile group: 'org.json', name: 'json', version: '20180813'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.9'
    compile group: 'joda-time', name: 'joda-time', version: '2.10.2'

    compile 'se.walkercrou:google-places-api-java:2.1.7'
    compile 'com.google.maps:google-maps-services:0.9.3'
    
    // no update because of huge refactor in new version
    compile 'org.springframework.hateoas:spring-hateoas:0.24.0.BUILD-SNAPSHOT'
    compile 'org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE'
    compile 'com.jayway.jsonpath:json-path:2.2.0'

    compile 'org.jtwig:jtwig-core:5.87.0.RELEASE'
    compile 'org.reflections:reflections:0.9.11'

    testCompile 'junit:junit:4.13-beta-3'
}

task fatJar(type: Jar) {
    baseName = project.name + '-fat'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

task update_lambda(type: Exec) {
    commandLine './update_lambda.sh'
}

build.dependsOn fatJar
build.dependsOn update_lambda

