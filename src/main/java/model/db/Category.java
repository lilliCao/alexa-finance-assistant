package model.db;

import amosalexa.handlers.budgettracker.BudgetManager;
import api.aws.DynamoDbMapper;
import com.amazonaws.services.dynamodbv2.datamodeling.*;

import java.util.List;

import static amosalexa.handlers.AmosStreamHandler.USER_ID;

/**
 * Represents a category for the budget tracker feature.
 * Every category has a (unique) name and a spending limit.
 * Categories are persisted in the Dynamo DB storage.
 */
@DynamoDBTable(tableName = "category")
public class Category {

    private String id;

    private String name;

    private double limit;

    private String accountNumber;

    public Category() {
    }

    public Category(String name) {
        this.accountNumber = USER_ID;
        this.name = name;
    }

    public Category(String accountNumber, String name, double limit) {
        this.accountNumber = accountNumber;
        this.name = name;
        this.limit = limit;
    }

    @DynamoDBHashKey
    @DynamoDBAutoGeneratedKey
    public String getId() {
        return id;
    }

    public Category setId(String id) {
        this.id = id;
        return this;
    }

    @DynamoDBAttribute
    public String getName() {
        return name;
    }

    public Category setName(String name) {
        this.name = name;
        return this;
    }

    @DynamoDBAttribute
    public double getLimit() {
        return limit;
    }

    public Category setLimit(double limit) {
        this.limit = limit;
        return this;
    }

    @DynamoDBAttribute
    public String getAccountNumber() {
        return accountNumber;
    }

    public Category setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
        return this;
    }

    @DynamoDBIgnore
    public Long getSpendingPercentage() {
        return Math.round((getSpending() / limit) * 100);
    }

    @DynamoDBIgnore
    public double getSpending() {
        return BudgetManager.instance.getTotalSpendingForCategory(this.getId());
    }

    @DynamoDBIgnore
    public static String categoryListText() {
        StringBuilder categoryNames = new StringBuilder();
        List<Category> categories = DynamoDbMapper.getInstance().loadAll(Category.class); //DynamoDbClient.instance.getItems(Category.TABLE_NAME, Category::new);
        for (int i = 0; i < categories.size() - 1; i++) {
            categoryNames.append(categories.get(i).getName()).append(", ");
        }
        categoryNames.append("oder ").append(categories.get(categories.size() - 1).getName());
        return categoryNames.toString();
    }
}